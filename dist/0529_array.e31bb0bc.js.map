{"version":3,"sources":["index.js"],"names":["negativeTopositive","totalNum","index","absIndex","Math","abs","newIndex","floor","arrayFrom","obj","f","x","newArr","i","length","arrayFromRec","run","acc","targetItem","arrayIsArray","objToStr","Object","prototype","toString","call","arrayOf","arrayOfRe","arr","ele","arrayOfRec","els","slice","arrayConcat","val","addArr","Array","isArray","push","arrayConcatRe","arrRe","arrConcatRec2","args","target","computedTarget","console","log","arrConcatRec3","arrcopywithin","start","end","copyArr","arrcopywithinRe","arrayFill","arrayFillRe","runArr","concat","arrayFillRec2","resultArr","computedValue","arrayFilter","arrayFilterRe","arrayFilterRec2","arrayFilterRec3","test","arrayFind","arrayFindRe","el","arrayFindIndex","arrayFindIndexRe","arrayFlatRe","depth","arrflatRec2","arrflatRec3","arrflatRec4","arrayFlatMap","flat","arrayFlatMapRe","arrayFlatMapRec2","arrayForeach","arrayForeachRec","arrayInclude","value","result","arrayIncludeRe","splice","arrayIndexof","eleToFind","arrayIndexofRe","arrayJoin","seperator","str","arrayJoinRe","arrayMap","arrayMapRe","arrayMapRec2","arrayPop","oldArr","arrayPop2","returnArr","arrayPopRe","arrayPopRec2","arrayPopRec3","returnVal","arrTest3","arrayPush","eles","arrayPush2","arrayPushRe","eleArr","arrayPushRec","arrayPushRec2","arrayReduce","initialValue","accumulator","arrayReduceRe","arrayReduceRight","previousValue","arrayReduceRightRe","pop","arrayReverse","arrayReverse2","arrayReverseRe","arrayReverseRec","arrayReverseRec2","arrReverseRec3","save","arrTest","arrayShift","arrayShift2","arrayShift3","arrayShiftRe","arrShiftRec","arrShiftRec2","arrShiftRec3","arrTest2","arraySlice","begin","arraySliceRe","arraySliceRec2","arraySome","arraySomeRe","arrSomeRec","arraySplice","delCount","front","back","items","arraySplice2","leftCount","shift","arrTest7","myFish","arraySpliceRec","arraySpliceRec2","copy","unshift","arrTest9","arrayToString","arrayToStringRec","arrayUnshift","arrayUnshift2","arrayUnshiftRec","arrayUnshiftRec2","arrayUnshiftRec3"],"mappings":"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","file":"0529_array.e31bb0bc.js","sourceRoot":"..","sourcesContent":["//음수 index => 양수index\r\nconst negativeTopositive = (totalNum, index) =>{\r\n  const absIndex = Math.abs(index)\r\n  let newIndex\r\n  if(absIndex > totalNum) {\r\n    newIndex = totalNum - (absIndex - Math.floor(absIndex/totalNum)*totalNum)\r\n  }\r\n  else {\r\n    newIndex = totalNum + index\r\n  }\r\n  return newIndex\r\n}\r\n\r\n//array.from 반복\r\nconst arrayFrom = (obj,f =x=>x) => {\r\n  const newArr =[]\r\n  for(let i=0; i<obj.length; i++) {\r\n    newArr[i] = f(obj[i], i)\r\n  }\r\n  return newArr\r\n}\r\n// console.log(Array.from({length: 5}, (v, i) => i))\r\n// console.log(arrayFrom({length: 5}, (v, i) => i))\r\n// console.log(arrayFrom('foo'))\r\n// console.log(arrayFrom([1,2,3],x=>x+2))\r\n\r\n//array.from 재귀\r\nconst arrayFromRec = (obj, f = x => x) => {\r\n  const run = (acc, obj, i, f) => {\r\n    if (i === obj.length) return acc;\r\n    const targetItem = f(obj[i], i);\r\n    return run([...acc, targetItem], obj, i + 1, f);\r\n  };\r\n  return run([], obj, 0, f);\r\n};\r\n\r\n//array.isarray\r\nconst arrayIsArray = (obj) =>{\r\n  const objToStr = Object.prototype.toString\r\n  // console.log(objToStr.call(obj))\r\n  return objToStr.call(obj) === '[object Array]'\r\n}\r\n// console.log(arrayIsArray('foo'))\r\n// console.log(Array.isArray('foo'))\r\n\r\n//array.of\r\nconst arrayOf = (...ele) => {\r\n  const newArr = []\r\n  for(let i=0; i<ele.length; i++) {\r\n    newArr[i] = ele[i]\r\n  }\r\n  return newArr\r\n}\r\n//array.of 재귀\r\nconst arrayOfRe = (...ele) => {\r\n  const run = (arr, i, ...ele) =>{\r\n    if(i === ele.length) return\r\n    arr[i] = ele[i]\r\n    i++\r\n    run(arr, i, ...ele)\r\n    return arr\r\n  }\r\n  return run([],0,...ele)\r\n}\r\nconst arrayOfRec = (...els) => els.length ? [els[0], ...arrayOfRec(...els.slice(1))] : []\r\n// console.log(arrayOfRe(1,2,3))\r\n// console.log(arrayOfRe(undefined))\r\n// console.log(arrayOf(7))\r\n// console.log(Array.of(7))\r\n\r\n//array.concat\r\nconst arrayConcat = (arr, ...val) => {\r\n  let addArr = []\r\n  if(!val[0]) val = arr\r\n  for(let i=0; i<val.length; i++) {\r\n    if(!Array.isArray(val[i])) addArr = [...addArr, val[i]] \r\n    else{\r\n      addArr = [...addArr,...val[i]]\r\n    }\r\n  }\r\n  arr.push(...addArr)\r\n  // const newArr = [...arr, ...addArr] // 필요없음\r\n  return arr\r\n}\r\n// console.log(arrayConcat([1,2,3],'a','b','c'))\r\n// console.log(arrayConcat(['a','b','c'],[4,5,6],'str'))\r\n\r\n//array.concat 재귀\r\n// const arrayConcatRe = (arrRe, ...val) => {\r\n//   // let addArr = [] // run 함수만 있어야 함\r\n//   const run =(empty, arr,i)=>{\r\n//     if(i === val.length) return\r\n//     if(!Array.isArray(val[i])) arr.push(val[i])\r\n//     else {\r\n//       arr.push(...val[i])\r\n//     }\r\n//     empty = arr\r\n//     i++\r\n//     run(empty, arr,i)\r\n//     return [...arrRe, ...empty]\r\n//   }\r\n//   return run([], [], 0)\r\n// }\r\nconst arrayConcatRe = (arrRe, ...val) => {\r\n  const run = (val=[],arr=[]) => {\r\n    if(val.length === 0) return arr \r\n\r\n    return [...arr, ...Array.isArray(val[0]) ? [...val[0], run(val.slice(1))] : [val[0], run(val.slice(1))]]\r\n  }\r\n  return run(val,arrRe)\r\n}\r\n// console.log(arrayConcatRe([1,2,3],'str'))\r\nconst arrConcatRec2 = (arr, ...args) => {\r\n  const run = (arr, args) => {\r\n    if (!args.length) return arr;\r\n    const target = args[0];\r\n    const computedTarget = Array.isArray(target) ? target : [target];\r\n    return run([...arr, ...computedTarget], args.slice(1));\r\n  };\r\n  return run(arr, args)\r\n};\r\nconsole.log(arrConcatRec2([1,2,3],['a','b','c'],[4,5,6],'str'))\r\nconst arrConcatRec3 = (arr, ...args) => {\r\n  const run = (arr, args) => {\r\n    if (!args.length) return [];\r\n    const target = args[0];\r\n    const computedTarget = Array.isArray(target) ? target : [target];\r\n    return [...arr, ...computedTarget, ...run([], args.slice(1))];\r\n  };\r\n  return run(arr, args)\r\n};\r\n//array.copyWithin\r\nconst arrcopywithin = (arr, target, start = 0, end = arr.length) =>{\r\n  if(target < 0) target = negativeTopositive(arr.length, target)\r\n  if(start < 0) start = negativeTopositive(arr.length, start)\r\n  if(end < 0) end = negativeTopositive(arr.length, end)\r\n  let newArr = []\r\n  let copyArr = []\r\n  for(let i = start; i<end; i++) {\r\n    copyArr = [...copyArr, arr[i]] \r\n  }\r\n  for(let i=0; i<copyArr.length; i++) {\r\n    newArr[target+i] = copyArr[i]\r\n  }\r\n  for(let i=0; i<arr.length; i++) {\r\n    if(!newArr[i]) newArr[i] = arr[i]\r\n  }\r\n  return newArr\r\n}\r\n// console.log(arrcopywithin([1,2,3,4,5],0,-2))\r\n// console.log([1,2,3,4,5].copyWithin(0,-2))\r\n\r\nconst arrcopywithinRe = (arr, target, start = 0, end = arr.length) => {\r\n  if(target < 0) target = negativeTopositive(arr.length, target)\r\n  if(start < 0) start = negativeTopositive(arr.length, start)\r\n  if(end < 0) end = negativeTopositive(arr.length, end)\r\n  let copyArr = []\r\n  for(let i = start; i<end; i++) {\r\n    copyArr = [...copyArr, arr[i]] \r\n  }\r\n  const run = (i,newArr) => {\r\n    if(i === arr.length) return\r\n    // newArr[i] = arr[i]\r\n    if(i < target || i > target+copyArr.length-1) {\r\n      newArr[i] = arr[i]\r\n    }\r\n    else {\r\n      for(let i=0; i<copyArr.length; i++) {\r\n        newArr[target+i] = copyArr[i]\r\n      }\r\n    }\r\n    i++\r\n    run(i,newArr)\r\n    // arr = newArr\r\n    return newArr \r\n  }\r\n  return(run(0,[]))\r\n}\r\n\r\n//array.fill\r\nconst arrayFill = (arr, val, start = 0, end = arr.length) => {\r\n  if(start < 0) start = negativeTopositive(arr.length, start)\r\n  if(end < 0) end = negativeTopositive(arr.length, end)\r\n  // let newArr = []\r\n  for(let i = start; i < end; i++) {\r\n    arr[i] = val\r\n  }\r\n  return arr\r\n}\r\n//array.fill 재귀\r\nconst arrayFillRe = (arr, val, start = 0, end = arr.length) => {\r\n  const run= (val, runArr = [], i, start, end) => {\r\n    // if(start>=arr.length || start === end) {\r\n    //   return arr\r\n    // }\r\n    // if(i>=start || i< end) {\r\n      //   arr[i] = val\r\n      //   newArr = arr\r\n      // }\r\n      // return arr\r\n      // i++\r\n      // run(i)\r\n      // return [...newArr]\r\n      if(i === arr.length) return \r\n    return (i>=start && i<end ? [val] : [arr[i]]).concat(run(val, arr, i+1, start, end))\r\n  }\r\n  return run(val, arr, 0, start, end)\r\n}\r\n// console.log(arrayFillRe([1,2,3],4))\r\nconst arrayFillRec2 = (arr, val, start=0, end=arr.length) => {\r\n  const run = (i, runArr, resultArr) => {\r\n    if(i === runArr.length) return resultArr \r\n    const computedValue = i >= start && i < end ? val : runArr[i]\r\n    // console.log(computedValue)\r\n    resultArr.push(computedValue)\r\n    return run(i+1, runArr, resultArr)\r\n    // return [...computedValue].concat(run(i+1, arr))\r\n  }\r\n  return run(0, arr, [])\r\n}\r\nconsole.log(arrayFillRec2([1,2,3],4))\r\n// console.log(arrayFillRec2([1,2,3],4,1,1))\r\n\r\n//array.filter\r\nconst arrayFilter = (arr, f) => {\r\n  let newArr = []\r\n  for(let i of arr) {\r\n    if(f(i)) newArr.push(i) \r\n  }\r\n  return newArr\r\n}\r\n// console.log(arrayFilter([1,2,3,4,5,6],test => test>5))\r\n//array.filter 재귀\r\nconst arrayFilterRe = (arr, f) =>{\r\n  const run = (arr=[]) => {\r\n    if(arr.length === 0) return \r\n    // if(i===arr.length) return\r\n    // if(f(arr[i])) newArr.push(arr[i])\r\n    // i++\r\n    // run(i,newArr)\r\n    // return (f(arr[i]) ? [...arr[0], ...run(arr.slice(1))] : [...run(arr.slice(1))] )\r\n    return (f(arr[0]) ? [arr[0], run(arr.slice(1))] : run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\nconst arrayFilterRec2 = (arr, f) =>{\r\n  const run = (runArr=[]) => {\r\n    if(!runArr.length) return\r\n    const target = runArr[0]\r\n    return f(target) ? [target, run(runArr.slice(1))] : run(runArr.slice(1))\r\n  }\r\n  return run(arr)\r\n}\r\n// const arrFilterRec = (arr, f) => f(arr[0]) && arr.length ? [arr[0], arrFilterRec(arr.slice(1), f)] : arrFilterRec(arr.slice(1), f) \r\n\r\nconst arrayFilterRec3 = (arr, f) => {\r\n  const run = (runArr, resultArr, f) => {\r\n    if(!runArr.length) return resultArr\r\n    //  resultArr.push(runArr[0])  \r\n    // return run(runArr.slice(1), resultArr, f)\r\n    return run(runArr.slice(1), f(runArr[0]) ? [...resultArr, runArr[0]] : [...resultArr], f)\r\n  }\r\n  return run(arr, [], f)\r\n}\r\nconsole.log(arrayFilterRec3(['a','aa','aaa'], test => test.length == 3)) \r\n\r\n// const arrflatRec = (arr) => {\r\n//   const run = (runArr, newArr=[]) =>{\r\n//     if(!runArr.length) return newArr\r\n//     const computedValue = Array.isArray(runArr[0]) ? runArr[0] : [runArr[0]]\r\n//     newArr.push(...computedValue)\r\n//     return run(runArr.slice(1),newArr)\r\n//   }\r\n//   return run(arr, [])\r\n// }\r\n\r\n// const arrConcatRec2 = (arr, ...args) => {\r\n//   const run = (arr, args) => {\r\n//     if (!args.length) return arr;\r\n//     const target = args[0];\r\n//     const computedTarget = Array.isArray(target) ? target : [target];\r\n//     return run([...arr, ...computedTarget], args.slice(1));\r\n//   };\r\n//   return run(arr, args)\r\n// };\r\n\r\n\r\n//array.find \r\nconst arrayFind = (arr, f) => {\r\n  for(let i of arr) {\r\n    if(f(i)) return i\r\n  }\r\n}\r\n// console.log(arrayFind([2,4,3],el=>el>2))\r\n\r\n//array.find 재귀\r\nconst arrayFindRe = (arr,f) => {\r\n  const run = (arr=[]) => {\r\n    if(arr.length === 0) return\r\n    return (f(arr[0]) ? arr[0] : run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\nconsole.log('find: ' +arrayFindRe(['a','aa','aaa'],el=>el==='aa'))\r\n\r\n//array.findIndex\r\nconst arrayFindIndex = (arr,f) => {\r\n  let index = -1\r\n  for(let i = 0; i < arr.length; i++) {\r\n    if(f(arr[i])) {\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  return index\r\n}\r\n// console.log(arrayFindIndex(['a','aa','aaa', 'aa'],el=>el==='aaaa'))\r\n\r\n//array.findeIndex 재귀\r\nconst arrayFindIndexRe = (arr,f) => {\r\n  const run = (i,arr=[],f) => {\r\n    if(i === arr.length) return -1\r\n    return (f(arr[i]) ? i : run(i+1,arr,f))\r\n  }\r\n  return run(0, arr,f)\r\n}\r\nconsole.log('findIdx: '+arrayFindIndexRe(['a','aa','aaa', 'aa'], el=>el.length>2))\r\n\r\n//arrayflat loop 다시\r\n// class ArrayFlatStruct {\r\n//   static create(v) {\r\n//     return new this(v);\r\n//   }\r\n//   constructor({depth = 1, val, index = null} = {}) {\r\n//     this.depth = depth;\r\n//     this.val = val;\r\n//     this.index = index;\r\n//   }\r\n// }\r\n// const arrayFlat = (arr, depth=1) => {\r\n//   let loop = 0\r\n//   // const cutArr = []\r\n//   // const newArr = []\r\n//   const stack = arr.map((val) => ArrayFlatStruct.create({val}))\r\n//   const resultArr = []\r\n//   let idx = 0;\r\n//   while(stack.length) {\r\n//     idx++\r\n//     const target = stack.shift()\r\n//     if(!target) return \r\n//     if (target.depth > depth) return \r\n//     if(Array.isArray(target.val)) {\r\n//       stack.push(...target.val.map(target=>{\r\n//         return ArrayFlatStruct.create({\r\n//           depth: target.depth+1,\r\n//           val: target.val,\r\n//           index: idx\r\n//         })\r\n//       }))\r\n//     }\r\n//     else {\r\n//       resultArr.push(target)\r\n//     }\r\n//   }\r\n  // const flat = (arr, depth = 1) => {\r\n  //   const stack = [...arr];\r\n    \r\n  //   const result = [];\r\n  //   while (stack.length) {\r\n  //     const current = stack.shift();\r\n  //     if (Array.isArray(current)) {\r\n  //       stack.unshift(...current);\r\n  //     } else {\r\n  //       result.push(current);\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n\r\n  // while(loop < depth) { //기준을 배열로\r\n  //   for(const i of arr) {\r\n  //     if(Array.isArray(i)) {\r\n  //       cutArr.push(i)\r\n  //     }\r\n  //     else {\r\n  //       newArr.push(i)\r\n  //     }\r\n  //   }\r\n  //   arr = newArr.concat(...cutArr)\r\n  //   loop++\r\n  // }\r\n  // return arr\r\n// }\r\n// console.log(arrayFlat([1,2,[3,4,[5]]],Infinity))\r\n// console.log(arrayFlat([[1,2],[3,4]]))\r\n\r\n//array.flat 재귀\r\nconst arrayFlatRe = (arr, depth=1) => {\r\n  const run = (arr = []) => {\r\n    if(arr.length === 0) return \r\n    // if(Array.isArray(arr[i])) cutArr.push(arr[i])\r\n    // else {\r\n    //   newArr.push(arr[i])\r\n    // }\r\n    // // console.log(cutArr)\r\n    // // console.log(newArr)\r\n    // i++\r\n    // run(newArr, cutArr, i)\r\n    // newArr = newArr.concat(...cutArr)\r\n    // // console.log([...newArr])\r\n    // return [...newArr]\r\n    // console.log(arr)\r\n    // return Array.isArray(arr[0]) ? [...arr[0], run(arr.slice(1))] : [arr[0], ...run(arr.slice(1))]\r\n    // return Array.isArray(arr[0]) ? [...arr[0]] : [arr[0]]\r\n    return (Array.isArray(arr[0]) ? [...arr[0]] : [arr[0]]).concat(run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\n// console.log(arrayFlatRe([1,2,[3,4,[5]]]))\r\n// console.log(arrayFlatRe([[1,2],[3,4]]))\r\nconst arrflatRec2 = (arr) => {\r\n  const run = (runArr, newArr=[]) => {\r\n    if(!runArr.length) return newArr\r\n    const computedValue = Array.isArray(runArr[0]) ? runArr[0] : [runArr[0]]\r\n    // return (run([...computedValue], runArr.slice(1)))\r\n    return run(runArr.slice(1), newArr.push(...computedValue))\r\n  }\r\n  return run(arr)\r\n}\r\n// console.log(arrflatRec2([1,2,[3,4,[5]]]))\r\nconst arrflatRec3 = (arr) => {\r\n  const run = (runArr, newArr=[]) =>{\r\n    if(!runArr.length) return newArr\r\n    const computedValue = Array.isArray(runArr[0]) ? runArr[0] : [runArr[0]]\r\n    newArr.push(...computedValue)\r\n    return run(runArr.slice(1),newArr)\r\n  }\r\n  return run(arr, [])\r\n}\r\n// console.log(arrflatRec3([1,2,[3,4,[5]]]))\r\n\r\n// const arrflatRec4 = (arr, depth = 1) => {\r\n//   const run = (runArr, newArr=[], depth) => {\r\n//     if(!runArr.length) return newArr\r\n//     const loop = (depth) => {\r\n//       if(depth === 0) return newArr\r\n//       const computedValue = Array.isArray(runArr[0]) ? runArr[0] : [runArr[0]]\r\n//       newArr.push(...computedValue)\r\n//       // console.log(newArr)\r\n//       runArr = newArr\r\n//       depth -- \r\n//       loop(depth)\r\n//     }\r\n//     loop(depth)\r\n//     // return run(runArr.slice(1),newArr)\r\n//   }\r\n//   return run(arr, [], depth)\r\n// }\r\n\r\nconst arrflatRec4 = (arr, depth=1) => {\r\n  const run = (i, arr, depth=depth, newArr) => {\r\n    if(i === arr.length) {\r\n      if(depth > 1) {\r\n        // console.log('loop')\r\n        return run(0, newArr, depth-1, [])\r\n      }\r\n      else {\r\n        return newArr \r\n      } \r\n    }\r\n    const computedValue = Array.isArray(arr[i]) ? arr[i] : [arr[i]]\r\n    newArr.push(...computedValue)\r\n    // console.log(newArr)\r\n    return run(i+1, arr, depth, newArr)\r\n  }\r\n  return run(0, arr, depth, [])\r\n}\r\n// console.log(arrflatRec4([1,[2,3],4,[5]],Infinity))\r\n// console.log(arrflatRec4([1,2,[3,4,[5]]],2))\r\n// console.log(arrflatRec4([1,2,[3,4,[5,[6]]]], 3))\r\n\r\n//array.flatMap\r\nconst arrayFlatMap = (arr, f) => {\r\n  const newArr = []\r\n  for(let i of arr) {\r\n    newArr.push(f(i))\r\n  }\r\n  return newArr.flat()\r\n  // console.log(newArr)\r\n}\r\n// console.log(arrayFlatMap([1,2,3,4], x => [x*2]))\r\n\r\n//array.flatMap 재귀\r\nconst arrayFlatMapRe = (arr, f) => {\r\n  const run = (arr=[]) => {\r\n    if(arr.length === 0) return\r\n    // newArr.push(f(arr[i]))\r\n    // i++\r\n    // run(i, newArr)\r\n    // // console.log(newArr.flat())\r\n    // return newArr.flat()\r\n    return (Array.isArray(f(arr[0])) ? [...f(arr[0])] : [f(arr[0])]).concat(run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\n// console.log(arrayFlatMapRe([1,2,3,4], x=>[x+2]))\r\n\r\nconst arrayFlatMapRec2 = (arr, f) => {\r\n  const run = (arr, f) => {\r\n    if(!arr.length) return []\r\n    const target = arr[0]\r\n    const computedTarget = Array.isArray(target) ? target : [target];\r\n    return [...f(...computedTarget), ...run(arr.slice(1), f)]\r\n  }\r\n  return run(arr, f)\r\n}\r\nconsole.log(arrayFlatMapRec2([1,2,3,4], x=>[x+2]))\r\n\r\n//array.foreach\r\nconst arrayForeach = (arr,f) => {\r\n  for(let i = 0; i<arr.length; i++) {\r\n    f(arr[i])\r\n  }\r\n}\r\n// console.log(arrayForeach([1,2,3,4], x=>x+1))\r\n\r\n//array.foreach 재귀\r\n// const arrayForeachRe = (arr,f) => {\r\n//   const run = (arr=[]) => {\r\n//     // if(i === arr.length) return\r\n//     // f(arr[i])\r\n//     // i++\r\n//     return f() \r\n//   }\r\n//   return run(arr)\r\n// }\r\nconst arrayForeachRec = (arr, f) => arr.length ? (f(arr[0]), arrayForeach(arr.slice(1), f)) : null\r\n// console.log(arrayForeachRec([1,2,3,4], x=>x+1))\r\n\r\n//array.include\r\nconst arrayInclude = (arr, value, start = 0) => {\r\n  if(start<0) start = negativeTopositive(start)\r\n  let result;\r\n  for(let i=start; i<arr.length; i++) {\r\n    if(arr[i] === value) {\r\n      result = true\r\n      break\r\n    }\r\n    else {\r\n      result = false\r\n    }\r\n  }\r\n  return result\r\n}\r\n// console.log(arrayInclude([1,2,3],4))\r\n\r\n//array.indclude 재귀\r\nconst arrayIncludeRe = (arr, value, start = 0) => {\r\n  const run = (arr=[]) => {\r\n    if(arr.length === 0) return false\r\n    return arr[0] === value ? true : run(arr.splice(1))\r\n  }\r\n  return run(arr)\r\n}\r\n\r\nconsole.log(arrayIncludeRe([1,2,3],4))\r\n\r\n//array.indexOf\r\nconst arrayIndexof = (arr, eleToFind, start = 0) => {\r\n  let index = -1\r\n  if(start<0) start = negativeTopositive(start)\r\n  for(let i=start; i < arr.length; i++) {\r\n    if(arr[i] === eleToFind) {\r\n      // console.log(i)\r\n      index = i\r\n      break\r\n    }\r\n  }\r\n  return index\r\n}\r\n// console.log(arrayIndexof([1,2,3],4))\r\n\r\n//array.indexOf 재귀\r\nconst arrayIndexofRe = (arr, eleToFind, start = 0) => {\r\n  const run = (i, arr=[]) => {\r\n    if(i === arr.length) return -1\r\n    // if(arr[i] === eleToFind) {\r\n    //   result = i\r\n    //   return result\r\n    // }\r\n    // else {\r\n    //   i++\r\n    //   return run(i)\r\n    // }\r\n    return arr[i] === eleToFind ? i : run(i+1, arr)\r\n  }\r\n  return run(0, arr)\r\n}\r\nconsole.log(arrayIndexofRe([1,2,3],4))\r\n\r\n//array.join\r\nconst arrayJoin = (arr, seperator=',') => {\r\n  let str \r\n  let result =''\r\n  for(let i=0; i<arr.length; i++) {\r\n    if(i==0) str = arr[i].toString()\r\n    else {\r\n      str = seperator + arr[i].toString()\r\n    }\r\n    result += str\r\n  }\r\n  return result\r\n}\r\n// console.log(arrayJoin(['a','b','c','d']))\r\n// console.log(arrayjoin([1,2,3,4]))\r\n\r\n//array.join() 재귀\r\nconst arrayJoinRe = (arr, seperator=',') => {\r\n  const run = (i, arr = []) => {\r\n    if(arr.length === 0) return \"\"\r\n    // console.log(arr)\r\n    // console.log(arr[0].toString())\r\n    // if(i == 0) result = arr[i].toString()\r\n    // else {\r\n    //   str = seperator + arr[i].toString()\r\n    // }\r\n    // result += str\r\n    // i++\r\n    // console.log(result)\r\n    // return result + run(i,str, result) \r\n    return (i === 0 ? '' : seperator) + arr[0].toString()+run(i+1, arr.slice(1)) \r\n  }\r\n  return run(0, arr)\r\n} \r\nconsole.log(arrayJoinRe(['a','b','c','d']))\r\n\r\n//array.map\r\nconst arrayMap = (arr, f) => {\r\n  const newArr = []\r\n  for(let i of arr) {\r\n    newArr.push(f(i))\r\n  } \r\n  return newArr\r\n}\r\n// console.log(arrayMap([1,2,3,4], x=>x+2))\r\n\r\nconst arrayMapRe = (arr, f) => {\r\n  const run = (arr=[]) => {\r\n    if(arr.length === 0) return\r\n    // newArr.push(f(arr[i]))\r\n    // i++\r\n    // run(i, newArr)\r\n    // return newArr\r\n    return [f(arr[0])].concat(run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\n// console.log(arrayMapRe([1,2,3,4], x=>x+2))\r\n// console.log(arrayMapRe([1,2,3,4], x=>x*2))\r\n\r\nconst arrayMapRec2 = (arr, f) => {\r\n  const run = (arr, f) => {\r\n    if(!arr.length) return []\r\n    return [f(arr[0]), ...run(arr.slice(1), f)]\r\n  }\r\n  return run(arr, f)\r\n}\r\nconsole.log(arrayMapRec2([1,2,3,4], x=>x*2))\r\n\r\n//array.pop\r\nconst arrayPop = (arr) =>{\r\n  const resultArr = []\r\n  const oldArr = []\r\n  resultArr.push(arr[arr.length-1]) \r\n  for(let i = 0; i<arr.length-1; i++) {\r\n    oldArr.push(arr[i])\r\n  }\r\n  arr = [...oldArr]\r\n  // console.log(arr)\r\n  return resultArr\r\n}\r\n// console.log(arrayPop([1,2,3,4]))\r\n\r\nconst arrayPop2 = (arr) => {\r\n  const returnArr = arr[arr.length-1]\r\n  delete arr[arr.length-1]\r\n  arr.length = arr.length-1\r\n  return [returnArr]\r\n}\r\nconsole.log(arrayPop2([1,2,3,4,5]))\r\n//array.pop 재귀\r\nconst arrayPopRe = (arr) => {\r\n  const run = (arr = []) => {\r\n    // resultArr.push(arr[arr.length-1])\r\n    if(arr.length === 1) return\r\n    // originalArr.push(arr[i])\r\n    // i++\r\n    // run(i,[],originalArr)\r\n    // arr = [...originalArr]\r\n    // // console.log(arr)\r\n    // return resultArr\r\n    return [arr[0]].concat(run(arr.slice(1)))\r\n  }\r\n  return run(arr)\r\n}\r\n// console.log(arrayPopRe([1,2,3,4,5]))\r\n\r\nconst arrayPopRec2 = (arr) => {\r\n  const run = (arr, newArr=[], returnArr = []) => {\r\n    if(!arr.length) return returnArr\r\n    arr.length === 1 ? returnArr.push(arr[0]) : newArr.push(arr[0])\r\n    return run(arr.slice(1), newArr, returnArr)\r\n  }\r\n  return run(arr, [])\r\n}\r\n// console.log(arrayPopRec2([1,2,3,4,5]))\r\n\r\n// const arrayPopRec3 = (arr, i=0) => i === arr.length-1 ? (delete arr [i], arr.length = arr.length-1) : arrayPopRec3(arr, i+1) \r\n\r\n// const arrayPopRec3 = (arr) => {\r\n//   const run = (arr, i) => {\r\n//     const copyArr = [...arr]\r\n//     if (i = arr.length) return [copyArr[copyArr.length-1]]\r\n//     return run(i === arr.length - 2 ? ([], arr.length = arr.length-1 ): copyArr.splice(1))\r\n//   }\r\n//   return run(arr, 0)\r\n// }\r\nconst arrayPopRec3 = (arr) => {\r\n  const run = (arr, i, returnVal) => {\r\n    if(i === arr.length) {\r\n      arr.length--\r\n      return returnVal\r\n    }\r\n    if(i === arr.length-1) returnVal = [arr[i]]\r\n    return run(arr, i+1, returnVal)\r\n  }\r\n  return run(arr, 0, 0)\r\n}\r\nconst arrTest3 = [1,2,3,4,5]\r\nconsole.log(arrayPopRec3(arrTest3))\r\nconsole.log(arrTest3)\r\n\r\n//array.push\r\nconst arrayPush = (arr,...eles) => {\r\n  // console.log(arr.length + eles.length)\r\n  arr = arr.concat(eles)\r\n  console.log(arr)\r\n  return arr.length\r\n}\r\nconst arrayPush2 = (arr, ...args) => {\r\n  const copyArr = [...arr]\r\n  arr.length = copyArr.length + args.length\r\n  for(let i = 0 ; i < args.length; i++) {\r\n    arr[i+copyArr.length] = args[i]\r\n  }\r\n  // console.log(arr)\r\n  return arr.length\r\n}\r\nconsole.log(arrayPush2([1,2,3],'a','b','c'))\r\n// console.log(arrayPush([1,2,3],15))\r\n\r\n//array.push 재귀\r\nconst arrayPushRe = (arr, ...eles) => {\r\n  const run = (eleArr = []) => {\r\n    // if (eleArr.length === 0) return\r\n    // arr = arr.concat(...eles[i])\r\n    // i++\r\n    // run(i)\r\n    // return arr.length\r\n    // return arr.concat(run(arr.slice(1)))\r\n    return arr.concat(eleArr.length ? [eleArr[0], ...run(eleArr.slice(1))] : [])\r\n    // return [...eleArr[0]].concat(run(eleArr.slice(1)))\r\n  }\r\n  return run(eles)\r\n}\r\n// console.log(arrayPushRe([1,2,3],'a','b','c'))\r\n\r\nconst arrayPushRec = (arr,...els) => els.length ? [...arr, els[0], ...arrayPushRec(...els.slice(1))] : []\r\nconsole.log(arrayPushRec([1,2,3],'a','b','c'))\r\n\r\nconst arrayPushRec2 = (arr, ...args) => {\r\n  const run = (arr, args) => {\r\n    if(!args.length) return arr.length\r\n    else {\r\n      arr.length += 1\r\n      arr[arr.length-1] = args[0]\r\n    }\r\n    // const newArr = args.length ? (arr.length += 1, arr[arr.length-1] = args[0]): [...arr] //if문\r\n    // console.log (arr)\r\n    return run(arr, args.slice(1)) \r\n  }\r\n  return run(arr, args)\r\n}\r\n// const arrTest4 = [1,2,3]\r\n// console.log(arrayPushRec2(arrTest4,'a','b','c'))\r\n// console.log(arrTest4)\r\n\r\n//array.reduce\r\nconst arrayReduce = (arr, f, initialValue=arr[0]) => {\r\n  let accumulator = initialValue\r\n  // console.log(accumulator)\r\n  for(let i=0; i<arr.length; i++) {\r\n    accumulator += f(arr[i])\r\n    // console.log(accumulator)\r\n  }\r\n  return accumulator\r\n}\r\n// console.log(arrayReduce([0,1,2,3], x => -x, 15))\r\n// console.log(arrayReduce([0,1,2,3], x => x))\r\n\r\n//array.reduce 재귀\r\nconst arrayReduceRe = (arr, f, initialValue=arr[0]) => {\r\n  const run = (arr = [], accumulator = initialValue) => {\r\n    // if(arr.length === 0) return\r\n    // accumulator += f(arr[i])\r\n    // console.log(accumulator)\r\n    // i++\r\n    // run(i, accumulator)\r\n    // return accumulator\r\n    // console.log(f(arr[0]))\r\n    return arr.length ? f(arr[0]) + run(arr.slice(1)) : accumulator\r\n  }\r\n  return run(arr)\r\n}\r\nconsole.log(arrayReduceRe([0,1,2,3], x => -x, 15))\r\n// console.log(arrayReduceRe([0,1,2,3], x => x))\r\n// const arrReduceRec = (arr, f, initialValue = arr[0]) => (arr.length ? f(arr[0]) : initialValue) + arrReduceRec(arr)\r\n\r\n//array.reduceRigth\r\nconst arrayReduceRight = (arr, f, initialValue = arr[arr.length-1]) => {\r\n  let previousValue = initialValue\r\n  for(let i = arr.length-2; i >= 0 ; i--) {\r\n    previousValue += f(arr[i])\r\n    // console.log(arr[i])\r\n  }\r\n  return previousValue\r\n}\r\n// console.log(arrayReduceRight([1,2,3], x=> x))\r\n\r\n//array.reduceRigth 재귀\r\nconst arrayReduceRightRe = (arr, f, initialValue=arr[arr.length-1]) => {\r\n  const run = (arr=[], i, previousValue = initialValue) => {\r\n    // if(i === -1) return\r\n    // console.log(arr[i])\r\n    // previousValue += f(arr[i])\r\n    // i--\r\n    // run(i, previousValue)\r\n    // return previousValue\r\n    return arr.length ? f(arr[i]) + run(arr.pop(), i-1) : previousValue\r\n    // return (i === 0 ? '' : seperator) + arr[0].toString() + run(i+1, arr.slice(1))\r\n  }\r\n  return run(arr, arr.length-1)\r\n}\r\nconsole.log(arrayReduceRightRe([1,2,3], x=> x))\r\n\r\n//array.reverse\r\nconst arrayReverse = (arr) => {\r\n  const resultArr  = []\r\n  for(let i = arr.length-1; i >= 0; i--) {\r\n    resultArr.push(arr[i])\r\n  }\r\n  return resultArr\r\n}\r\n// console.log(arrayReverse([1,2,3]))\r\n\r\nconst arrayReverse2 = (arr) => {\r\n  // const copyArr = [...arr]\r\n  // for(let i = 0; i < arr.length; i++) {\r\n  //   delete arr[i]\r\n  //   arr.length = 0\r\n  // }\r\n\r\n  // for(let i = copyArr.length-1; i >= 0; i--) {\r\n  //   arr[i] = copyArr[copyArr.length-1-i]\r\n  //   // console.log(copyArr.length-1-i)\r\n  // }\r\n  for (let i = 0; i<= arr.length/2 -1; i++) {\r\n    // const save = arr[i] \r\n    // arr[i] = arr[arr.length-i-1]\r\n    // arr[arr.length-i-1] = save\r\n    [arr[i], arr[arr.length-i-1]] = [arr[arr.length-i-1], arr[i]]\r\n  }\r\n  // console.log(arr)\r\n  return arr\r\n}\r\nconsole.log(arrayReverse2([1,2,3]))\r\n\r\n//array.reverse 재귀 \r\nconst arrayReverseRe = (arr) => {\r\n  const run = (arr = [], i) => {\r\n    // if(i === -1) return\r\n  //   resultArr.push(arr[i])\r\n  //   i--\r\n  //   run(i, resultArr)\r\n  //   return resultArr\r\n    // console.log(arr)\r\n    return arr.length ? [arr[i], ...run(arr.pop(), i-1)] : []\r\n  }\r\nreturn run(arr, arr.length-1)\r\n}\r\nconst arrayReverseRec = (arr) => arr.length ? [...arrayReverseRec(arr.slice(1)), arr[0]] : []\r\nconsole.log(arrayReverseRec([1,2,3]))\r\n\r\nconst arrayReverseRec2 = (arr) => {\r\n  const run = (arr, i, copyArr) => {\r\n    if (i < 0) return arr = [...copyArr]\r\n    copyArr.push(arr[i])\r\n    delete arr[i]\r\n    arr.length--\r\n    // arr[i] = copyArr[0]\r\n    // console.log(arr[i], copyArr[0])\r\n    return run(arr, i-1, copyArr)\r\n  }\r\n  return run(arr, arr.length-1, [])\r\n}\r\n\r\nconst arrReverseRec3 = (arr) => {\r\n  const run = (arr, i, save) => {\r\n    if(i > arr.length/2 -1) return arr\r\n    save = arr[i]\r\n    arr[i] = arr[arr.length-i-1]\r\n    arr[arr.length-i-1] = save\r\n    // [arr[i], arr[arr.length-i-1]] = [arr[arr.length-i-1], arr[i]]\r\n    return run(arr, i+1, save)\r\n  }\r\n  return run(arr, 0, 0)\r\n}\r\nconst arrTest = [1, 2, 3]\r\nconsole.log(arrReverseRec3(arrTest))\r\nconsole.log(arrTest)\r\n//array.shift\r\nconst arrayShift = (arr) => {\r\n  const resultArr = []\r\n  for(let i = 1; i < arr.length; i++){\r\n    resultArr.push(arr[i])\r\n  }\r\n  arr = [...resultArr]\r\n  return arr.length\r\n}\r\n// console.log(arrayShift([1,2,3]))\r\nconst arrayShift2 = (arr) => {\r\n  const copyArr = [...arr]\r\n  for (let i = 0; i < arr.length; i++) {\r\n    delete arr[i]\r\n    arr.length = arr.length-1\r\n  }\r\n  for (let i = 1; i < copyArr.length; i++) {\r\n    arr[i-1] = copyArr[i]\r\n  }\r\n  return arr\r\n}\r\n// console.log(arrayShift2([1,2,3]))\r\nconst arrayShift3 = (arr) => {\r\n  const returnVal = arr[0]\r\n  for(let i = 1; i<arr.length; i++) {\r\n    arr[i-1] = arr[i]\r\n  }\r\n  arr.length--\r\n  return [returnVal]\r\n}\r\n// const arrTest1 = [1, 2, 3]\r\n// console.log(arrayShift3(arrTest1))\r\n// console.log(arrTest1)\r\n\r\n//array.shift 재귀\r\nconst arrayShiftRe = (arr) => {\r\n  const run = (i, result) => {\r\n    if(i === arr.length) return\r\n    if(i > 0) result.push(arr[i])\r\n    i++\r\n    run(i, result)\r\n    arr = [...result]\r\n    return result.length\r\n  }\r\n  return run(0, [])\r\n}\r\nconst arrShiftRec = (arr, i=1) => arr.length ? [arr[i], ...arrShiftRec(arr.slice(1))] : []\r\nconst arrShiftRec2 = (arr) => {\r\n  const run = (arr, i, newArr =[], returnArr=[]) => {\r\n    if(i === arr.length) return returnArr\r\n    i > 0 ? newArr.push(arr[i]) : returnArr.push(arr[i])\r\n    return run(arr, i+1, newArr, returnArr) \r\n  }\r\n  return run(arr, 0, [])\r\n}\r\n// console.log(arrShiftRec2([1,2,3,4,5]))\r\nconst arrShiftRec3 = (arr) => {\r\n  const run = (arr, i, returnVal) => {\r\n    if(i === arr.length) {\r\n      arr.length = arr.length-1\r\n      return returnVal\r\n    }\r\n    if(i === 0) returnVal = [arr[i]]\r\n    else arr[i-1] = arr[i]\r\n    return run(arr, i+1, returnVal)\r\n  }\r\n  return run(arr, 0, 0)\r\n}\r\nconst arrTest2 = [1,2,3,4,5]\r\nconsole.log(arrShiftRec3(arrTest2))\r\nconsole.log(arrTest2)\r\n\r\n//array.slice \r\nconst arraySlice = (arr, begin=0, end=arr.length) => {\r\n  const resultArr = []\r\n  for(let i = begin; i < end; i++) {\r\n    resultArr.push(arr[i])\r\n  }\r\n  return resultArr\r\n}\r\n// console.log(arraySlice([1,2,3,4,5],2,4))\r\n\r\n//array.slice 재귀\r\nconst arraySliceRe = (arr, begin=0, end=arr.length) => {\r\n  const run = (arr=[], i, begin, end) => {\r\n    if(i === end) return\r\n    // resultArr.push(arr[i])\r\n    // i++\r\n    // run(i, resultArr)\r\n    // return resultArr\r\n    return [arr[i]].concat(run(arr, i+1, begin, end))\r\n  }\r\n  return run(arr, begin, begin, end)\r\n}\r\n// console.log(arraySliceRe([1,2,3,4,5],2,4))\r\n\r\nconst arraySliceRec2 = (arr, begin=0, end=arr.length) => {\r\n  const run = (arr, begin=begin, end=end, i) => {\r\n    if(i===end) return []\r\n    return [arr[i], ...run(arr, begin, end, i+1)]\r\n  }\r\n  return run(arr, begin, end, begin)\r\n}\r\nconsole.log(arraySliceRec2([1,2,3,4,5],2,4))\r\n\r\n//array.some\r\nconst arraySome = (arr, f) => {\r\n  let result = false\r\n  for(let i=0; i<arr.length; i++) {\r\n    if(f(arr[i])) result = true\r\n  }\r\n  return result\r\n  // console.log(result)\r\n}\r\n// console.log(arraySome([1,2,3],x=>x>2))\r\n// console.log(arraySome([1,2,3],x=>x>3))\r\n\r\n//array.some 재귀\r\nconst arraySomeRe = (arr, f) => {\r\n  const run = (i, result = false) => {\r\n    if(i === arr.length) return false\r\n    if(f(arr[i])) {\r\n      result = true\r\n      return result\r\n    }\r\n    else {\r\n      i++\r\n      return run(i)\r\n    }\r\n  }\r\n  return run(0)\r\n}\r\nconst arrSomeRec = (arr, f, i) => arr.length ? (f(arr[0]) ? true : arrSomeRec(arr.slice(1), f)) : false\r\nconsole.log(arrSomeRec([2,3,4], x=>x>4))\r\nconsole.log(arrSomeRec([2,3,4], x=>x>1))\r\n\r\n//array.splice\r\n// const arraySplice = (arr, start, delCount, ...items) => {\r\n//   const returnArr = []\r\n//   const index = []\r\n//   if(start > arr.length) start = arr.length\r\n//   if(start < 0 && Math.abs(start) > arr.length) start = 0\r\n//   if(delCount > arr.length - start || !delCount) delCount = arr.length-start\r\n//   for(let i = start; i<start+delCount; i++) { //리턴할 배열\r\n//     returnArr.push(arr[i])\r\n//     index.push(i)\r\n//   }\r\n//   // arr[i] = returnArr[i-start]\r\n//   // console.log(arr).\r\n//   // console.log(items)\r\n//   // return returnArr //제거한 요소 \r\n// }\r\n// console.log(arraySplice([0,1,2,3,4],2,2,'a','b'))\r\n//arr.splice\r\nconst arraySplice = (arr, start, delCount = arr.length-start, ...items) => {\r\n  if(start > arr.length) start = arr.length\r\n  if(start < 0 && Math.abs(start) > arr.length) start = 0\r\n  if(delCount > arr.length - start) delCount = arr.length-start\r\n  const returnArr = []\r\n  const front = []\r\n  const back = []\r\n  for(let i=0; i<arr.length; i++) {\r\n    if(i<start) front.push(arr[i])\r\n    else if(i >= start + delCount) back.push(arr[i])\r\n    else {\r\n      returnArr.push(arr[i])\r\n    }\r\n  }\r\n  arr = (front.concat(items)).concat(back) \r\n  return returnArr\r\n}\r\n\r\nconst arraySplice2 = (arr, start, delCount = arr.length-start, ...args) => {\r\n  if(start > arr.length) start = arr.length\r\n  if(start < 0 && Math.abs(start) > arr.length) start = 0\r\n  if(delCount > arr.length - start) delCount = arr.length-start\r\n  const copyArr = [...arr]\r\n  const leftCount = copyArr.length-start-delCount \r\n  const returnArr = []\r\n  \r\n  arr.length = 0 // 원본 배열 삭제\r\n  for (let i=0; copyArr.length || args.length; i++) {\r\n    if (i < start) returnArr.push(copyArr.shift())\r\n    else {\r\n      if(i < start+delCount) copyArr.shift()\r\n      if(args.length) returnArr.push(args.shift())\r\n      else returnArr.push(copyArr.shift())\r\n    }\r\n  }\r\n\r\n  // for(let i = start; i< start+delCount; i++) {\r\n  //   returnArr.push(arr[i])\r\n  // }\r\n\r\n  // for(let i = 0; i < start; i++) {\r\n  //   arr[i] = copyArr[i]\r\n  // }\r\n  // if(args.length) arr.push(...args)\r\n\r\n  // const arrLength = arr.length\r\n  // for(let i = arrLength; i < arrLength+leftCount; i++) {\r\n  //   arr[i] = copyArr[i-arrLength+start+delCount]\r\n  // }\r\n  return returnArr\r\n}\r\nconst arrTest7 = [0,1,2,3,4,5]\r\nconsole.log(arraySplice2(arrTest7, 2, 3, 'a', 'b'))\r\n// console.log(arraySplice2(arrTest7, 2, 3))\r\nconsole.log(arrTest7)\r\nconst myFish = ['angel', 'clown', 'trumpet', 'sturgeon'];\r\nconsole.log(arraySplice2(myFish,0, 2, 'parrot', 'anemone', 'blue'))\r\n// console.log(myFish)\r\n\r\n\r\n//arr.splice 재귀\r\nconst arraySpliceRec = (arr, start, delCount = arr.length-start, ...items) => {\r\n  const run = (arr = [], i) => {\r\n    if(i === arr.length) return\r\n    return i < start || i >= start + delCount ? run(arr, i+1) : [arr[i]].concat(run(arr, i+1))\r\n  }\r\n  return run(arr, 0)\r\n}\r\n// console.log(arraySpliceRec([0,1,2,3,4,5],3,1))\r\n\r\n// const arraySpliceRec2 = (arr, start, delCount = arr.length-start, ...args) => {\r\n//   const run = (result = [], front =[], back =[], i, arr=[], start, delCount, args) => {\r\n//     if (i === arr.length) return result\r\n//     if (i < start) front.push(arr[i])\r\n//     else if(i >= start + delCount) back.push(arr[i])\r\n//     return run([...front, ...args, ...back], front, back, i+1, arr, start, delCount, args)\r\n//   }\r\n//   return run([], [], [], 0, arr, start, delCount, args)\r\n// }\r\n\r\nconst arraySpliceRec2 = (arr, start, delCount = arr.length-start, ...args) => {\r\n  const run = (copy, returnArr, front, back, i, arr, start, delCount, args) => {\r\n    if (i < 0) {\r\n      arr.push(...front)\r\n      if(args) arr.push(...args)\r\n      arr.push(...back)\r\n      return returnArr \r\n    }\r\n    copy.push(arr[i])\r\n    arr.length --\r\n    if (i < start) front.unshift(copy[0])\r\n    else if (i >= start + delCount) back.unshift(copy[0])\r\n    else if (i >= start && i< start+delCount) returnArr.unshift(copy[0]) \r\n    return run(copy.slice(1), returnArr, front, back, i-1, arr, start, delCount, args)\r\n  }\r\n  return run([], [], [], [], arr.length-1, arr, start, delCount, args)\r\n}\r\n\r\nconst arrTest9 = [0,1,2,3,4,5]\r\nconsole.log(arraySpliceRec2(arrTest9,2,3))\r\n// console.log(arraySpliceRec2(arrTest9,2,3,'a','b'))\r\nconsole.log(arrTest9)\r\n\r\n// const arrTest8 = [0,1,2,3,4]\r\n// console.log(arraySpliceRec2(arrTest8, 2, 1, 'a','b'))\r\n// console.log(arrTest8)\r\n// console.log(arraySpliceRec2([0,1,2,3,4,5],3,1,'a', 'b', 'c'))\r\n// console.log(arraySpliceRec2(['Jan', 'March', 'April', 'June'],1, 0, 'Feb'))\r\n// console.log(arraySpliceRec2(['angel', 'clown', 'mandarin', 'sturgeon'],2, 3, 'drum', 'guitar'))\r\n\r\n\r\n//arrayTostring \r\nconst arrayToString = (arr) => {\r\n  let str \r\n  let result =''\r\n  for(let i=0; i<arr.length; i++) {\r\n    if(i==0) str = arr[i].toString()\r\n    else {\r\n      str = ',' + arr[i].toString()\r\n    }\r\n    result += str\r\n  }\r\n  return result\r\n}\r\n// console.log(arrayToString(['a','p','p','l','e']))\r\n\r\n//arrayTostring 재귀\r\nconst arrayToStringRec = (arr) => {\r\n  const run = (i, arr = []) => {\r\n    if(arr.length === 0) return \"\"\r\n    return (i === 0 ? '' : ',') + arr[0].toString()+run(i+1, arr.slice(1)) \r\n  }\r\n  return run(0, arr)\r\n} \r\nconsole.log(arrayToStringRec([1,2,3,4,5]))\r\n// console.log(arrayToStringRec(['a','p','p','l','e']))\r\n\r\n//arrayUnshift\r\nconst arrayUnshift = (arr, ...eles) => {\r\n  const newArr = [...eles].concat(...arr)\r\n  return newArr.length\r\n}\r\nconst arrayUnshift2 = (arr, ...args) => {\r\n  arr.length = arr.length + args.length\r\n  for (let i = arr.length-1; i >=0 ; i--) {\r\n    if (i > args.length-1) arr[i] = arr[i-args.length]\r\n    else arr[i] = args[i]\r\n  }\r\n  return arr.length\r\n}\r\n// const arrTest5 = [1,2,3]\r\n// console.log(arrayUnshift2(arrTest5,'a','b','c'))\r\n// console.log(arrTest5)\r\n\r\n//arrayUnshift 재귀\r\nconst arrayUnshiftRec = (arr,...els) => els.length ? [els[0], ...arrayPushRec(...els.slice(1)), ...arr] : []\r\n// console.log(arrayUnshiftRec([1,2,3],'a','b','c'))\r\n\r\nconst arrayUnshiftRec2 = (arr, ...args) => {\r\n  const run = (i, arr, ...args) => {\r\n    if(i === args.length) return arr.length\r\n    return run(i+1, [...args[i], ...arr], args)\r\n  }\r\n  return run(0, arr, args)\r\n}\r\nconsole.log(arrayUnshiftRec2([1,2,3],'a','b','c'))\r\n\r\nconst arrayUnshiftRec3 = (arr, ...args) => {\r\n  const run = (i, arr, args) => {\r\n    if(!args.length) return arr.length\r\n    arr.length ++\r\n    for (let i = arr.length-1; i >=0 ; i--) {\r\n      if(i>0) arr[i] = arr[i-1]\r\n    }\r\n    arr[i] = args[0]\r\n    return run(i+1, arr, args.slice(1))\r\n  }\r\n  return run(0, arr, args)\r\n}\r\n// const arrTest6 = [1,2,3]\r\n// console.log(arrayUnshiftRec3(arrTest6, 'a', 'b'))\r\n// console.log(arrTest6)\r\n\r\n// const arrayValue = (arr) => {\r\n//   const result = arr.map((ele, index) => {\r\n//     return {\r\n//       ele\r\n//     }\r\n//   })\r\n//   return Object.values(result)\r\n// }\r\n// console.log(arrayValue(['a','b','c']))"]}